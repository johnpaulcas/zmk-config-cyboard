#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    behaviors {
        hrm_l: hrm_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 46 47 54 55 56 57 58 59 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81>;
            flavor = "tap-preferred";
        };

        hrm_r: hrm_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 48 49 50 51 52 53 60 61 62 63 64 70 70 71 72 73 74 75 76 77 78 79 80 81>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none       &none           &none              &none                  &none                &none                    &none  &none                 &none                     &none               &none           &none
&none       &none           &none              &none                  &none                &none                    &none  &none                 &none                     &none               &none           &none
&kp TAB     &kp Q           &kp W              &kp F                  &kp P                &kp B                    &kp J  &kp L                 &kp U                     &kp Y               &kp SEMICOLON   &kp BSLH
&caps_word  &hrm_l LCTRL A  &hrm_l LEFT_ALT R  &hrm_l LEFT_COMMAND S  &hrm_l LEFT_SHIFT T  &kp G                    &kp M  &hrm_r RIGHT_SHIFT N  &hrm_r RIGHT_COMMAND E    &hrm_l RIGHT_ALT I  &hrm_r RCTRL O  &kp COLON
&kp LSHFT   &kp Z           &kp X              &kp C                  &kp D                &kp V                    &kp K  &kp H                 &kp COMMA                 &kp DOT             &kp FSLH        &kp RSHFT
&mo 3       &kp HOME        &kp LGUI           &kp LEFT               &kp RIGHT                                            &kp DOWN              &kp UP_ARROW              &none               &none           &none
                                                                      &key_repeat          &kp LEFT_SHIFT  &none    &none  &kp RC(SPACE)         &mt RC(RS(RA(RGUI))) TAB
                                                                      &lt 2 BACKSPACE      &kp ESCAPE      &none    &none  &kp ENTER             &kp SPACE
            >;
        };

        Numpad_Nav_Layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans    &trans    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans    &trans    &trans     &trans  &trans
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans            &trans  &kp HOME  &kp UP    &kp END    &trans  &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &trans            &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans            &trans  &trans    &trans    &trans     &trans  &trans
&trans  &trans  &trans  &kp N0  &trans                            &trans    &trans    &trans     &trans  &trans
                                &trans  &trans  &trans    &trans  &trans    &trans
                                &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans        &trans        &trans             &trans        &trans                      &trans          &trans          &trans        &trans           &trans             &trans
&trans  &trans        &trans        &trans             &trans        &trans                      &trans          &trans          &trans        &trans           &trans             &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3       &kp NUMBER_4  &kp NUMBER_5                &kp NUMBER_6    &kp NUMBER_7    &kp NUMBER_8  &kp NUMBER_9     &kp NUMBER_0       &trans
&trans  &trans        &none         &kp DOUBLE_QUOTES  &kp PERCENT   &none                       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp RIGHT_CONTROL  &trans
&trans  &trans        &trans        &trans             &trans        &kp LEFT_BRACKET            &trans          &trans          &trans        &kp RC(SPACE)    &trans             &trans
&trans  &trans        &trans        &kp UNDERSCORE     &kp EQUAL                                                 &kp MINUS       &kp PLUS      &trans           &trans             &trans
                                                       &trans        &trans            &trans    &trans          &kp PERIOD      &kp NUMBER_0
                                                       &trans        &trans            &trans    &trans          &none           &none
            >;
        };

        magic {
            bindings = <
&trans       &trans  &trans  &trans  &trans        &trans                        &trans  &trans           &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans        &trans                        &trans  &trans           &trans  &trans  &trans  &trans
&bt BT_CLR   &none   &none   &none   &none         &none                         &trans  &rgb_ug RGB_TOG  &trans  &trans  &trans  &bt BT_CLR_ALL
&sys_reset   &none   &none   &none   &none         &none                         &trans  &trans           &trans  &trans  &trans  &sys_reset
&bootloader  &none   &none   &none   &none         &none                         &trans  &trans           &trans  &trans  &trans  &bootloader
&trans       &none   &none   &none   &none                                               &trans           &trans  &trans  &trans  &trans
                                     &bt BT_SEL 2  &bt BT_SEL 3  &none           &trans  &trans           &trans
                                     &bt BT_SEL 0  &bt BT_SEL 1  &out OUT_USB    &trans  &trans           &trans
            >;
        };
    };
};

// right hand trackball configuration
// &trackball_peripheral_listener {
//    input-processors =
//     activate layer 3 within 500ms of the trackball moving
//     <&zip_temp_layer 3 500>;
// };
//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),,,,,,,
        <&zip_xy_scaler 1 3>,
        // make this trackball output scrolling events by default instead of cursor movement,,,,,,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,,,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
